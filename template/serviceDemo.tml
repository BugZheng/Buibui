package service

import (
	"ProjectName/app/model"
	"ProjectName/pkg/serializer"
	"net/http"
)


// UserRegisterService 管理用户注册服务
type UserRegisterService struct {
	Nickname        string `form:"nickname" json:"nickname" binding:"required,min=2,max=30"`
	UserName        string `form:"user_name" json:"user_name" binding:"required,min=5,max=30"`
	Password        string `form:"password" json:"password" binding:"required,min=8,max=40"`
	PasswordConfirm string `form:"password_confirm" json:"password_confirm" binding:"required,min=8,max=40"`
}

//UserLoginService  管理用户登录的服务
type UserLoginService struct {
	UserName string `form:"user_name" json:"user_name" binding:"required,min=5,max=30"` //用户姓名
	Password string `form:"password" json:"password" binding:"required,min=8,max=40"`   //密码
	Test     string `form:"test" json:"test" binding:"required,min=8,max=40"`           //测试字段
	Test2    string `form:"test2" json:"test2" binding:"required,min=5,max=30"`         //测试字段2
}

//DemoService demo参数验证结构体
type DemoService struct {
	Test1 string `form:"test1" json:"test1" binding:"required,min=5,max=30"` //测试字段1
	Test2 string `form:"test2" json:"test2" binding:"required"`              //测试字段2
	Test3 string `form:"test3" json:"test3" binding:"-"`                     //测试字段3
}

// DemoAPI 测试
func (d *DemoService) DemoAPI() *serializer.Response {
	user, _ := model.GetUser()
	return &serializer.Response{
		Code: http.StatusOK,
		Data: user,
		Msg:  http.StatusText(200),
	}
}
